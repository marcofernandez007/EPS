{"ast":null,"code":"import _objectSpread from \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\src\\\\components\\\\clientes\\\\EditarCliente.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\n\nfunction EditarCliente(props) {\n  // obtener el ID\n  const id = props.match.params.id; // cliente = state, datosCliente = funcion para guardar el state\n\n  const _useState = useState({\n    nombre: '',\n    apellido: '',\n    fecha_nacimiento: '',\n    numero_cedula: '',\n    email: '',\n    telefono: '',\n    tipo_ser: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cliente = _useState2[0],\n        datosCliente = _useState2[1]; // Query a la API\n\n\n  const consultarAPI = async () => {\n    const clienteConsulta = await clienteAxios.get(\"/clientes/\".concat(id)); // colocar en el state\n\n    datosCliente(clienteConsulta.data);\n  }; // useEffect, cuando el componente carga\n\n\n  useEffect(() => {\n    consultarAPI();\n  }, []); // leer los datos del formulario\n\n  const actualizarState = e => {\n    // Almacenar lo que el usuario escribe en el state\n    datosCliente(_objectSpread({}, cliente, {\n      [e.target.name]: e.target.value\n    }));\n  }; // Envia una petición por axios para actualizar el cliente\n\n\n  const actualizarCliente = e => {\n    e.preventDefault(); // enviar petición por axios\n\n    clienteAxios.put(\"/clientes/\".concat(cliente._id), cliente).then(res => {\n      // validar si hay errores de mongo \n      if (res.data.code === 11000) {\n        Swal.fire({\n          type: 'error',\n          title: 'Hubo un error',\n          text: 'Ese cliente ya esta registrado'\n        });\n      } else {\n        Swal.fire('Correcto', 'Se actualizó Correctamente', 'success');\n      } // redireccionar\n\n\n      props.history.push('/');\n    });\n  }; // Validar el formulario\n\n\n  const validarCliente = () => {\n    // Destructuring\n    const nombre = cliente.nombre,\n          apellido = cliente.apellido,\n          fecha_nacimiento = cliente.fecha_nacimiento,\n          numero_cedula = cliente.numero_cedula,\n          email = cliente.email,\n          telefono = cliente.telefono,\n          tipo_ser = cliente.tipo_ser; // revisar que las propiedades del state tengan contenido\n\n    let valido = !nombre.length || !apellido.length || !email.length || !numero_cedula.length || !telefono.length; // return true o false\n\n    return valido;\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Editar Cliente\"), React.createElement(\"form\", {\n    onSubmit: actualizarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Llena todos los campos\"), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Numero Cedula:\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Numero Cedula\",\n    name: \"numero_cedula\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Nombre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Nombre Cliente\",\n    name: \"nombre\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Apellido:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Apellido Cliente\",\n    name: \"apellido\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Tipo Ser:\"), React.createElement(\"select\", {\n    name: \"tipo_ser\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Humano\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Seleccione Uno\"), React.createElement(\"option\", {\n    value: \"Humano\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Humano\"), React.createElement(\"option\", {\n    value: \"Dios\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"DIos\"))), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Fecha Nacimiento:\"), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Fecha Nacimiento\",\n    name: \"fecha_nacimiento\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Cliente\",\n    name: \"email\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Tel\\xE9fono:\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Tel\\xE9fono Cliente\",\n    name: \"telefono\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-azul\",\n    value: \"Guardar Cambios\",\n    disabled: validarCliente(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))));\n} // HOC, es una función que toma un componente y retorna un nuevo componente\n\n\nexport default withRouter(EditarCliente);","map":{"version":3,"sources":["E:\\Academicos\\Udemy\\Node.js -Bootcamp\\cliente-api\\src\\components\\clientes\\EditarCliente.js"],"names":["React","Fragment","useState","useEffect","Swal","withRouter","clienteAxios","EditarCliente","props","id","match","params","nombre","apellido","fecha_nacimiento","numero_cedula","email","telefono","tipo_ser","cliente","datosCliente","consultarAPI","clienteConsulta","get","data","actualizarState","e","target","name","value","actualizarCliente","preventDefault","put","_id","then","res","code","fire","type","title","text","history","push","validarCliente","valido","length"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { withRouter } from 'react-router-dom'; \r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\n\r\nfunction EditarCliente(props){\r\n\r\n    // obtener el ID\r\n    const { id } = props.match.params;\r\n\r\n    // cliente = state, datosCliente = funcion para guardar el state\r\n    const[cliente, datosCliente] = useState({\r\n        nombre:'',\r\n        apellido:'',\r\n        fecha_nacimiento:'',\r\n        numero_cedula:'',\r\n        email:'',\r\n        telefono:'',\r\n        tipo_ser:''\r\n    });\r\n\r\n    // Query a la API\r\n    const consultarAPI = async () => {\r\n        const clienteConsulta = await clienteAxios.get(`/clientes/${id}`);\r\n\r\n       // colocar en el state\r\n       datosCliente(clienteConsulta.data);\r\n    }\r\n\r\n    // useEffect, cuando el componente carga\r\n    useEffect( () => {\r\n        consultarAPI();\r\n    }, []);\r\n\r\n    // leer los datos del formulario\r\n    const actualizarState = e => {\r\n        // Almacenar lo que el usuario escribe en el state\r\n        datosCliente({\r\n            // obtener una copia del state actual\r\n            ...cliente, \r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Envia una petición por axios para actualizar el cliente\r\n    const actualizarCliente = e => {\r\n        e.preventDefault();\r\n\r\n        // enviar petición por axios\r\n        clienteAxios.put(`/clientes/${cliente._id}`, cliente) \r\n            .then(res => {\r\n                // validar si hay errores de mongo \r\n                if(res.data.code === 11000) {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Hubo un error',\r\n                        text: 'Ese cliente ya esta registrado'\r\n                    })\r\n                } else {\r\n                    Swal.fire(\r\n                        'Correcto',\r\n                        'Se actualizó Correctamente',\r\n                        'success'\r\n                    )\r\n                }\r\n\r\n                // redireccionar\r\n                props.history.push('/');\r\n            })\r\n    }\r\n\r\n    // Validar el formulario\r\n    const validarCliente = () => {\r\n        // Destructuring\r\n        const { nombre,apellido, fecha_nacimiento,numero_cedula,email,telefono,tipo_ser} = cliente;\r\n\r\n        // revisar que las propiedades del state tengan contenido\r\n        let valido = !nombre.length || !apellido.length || !email.length || !numero_cedula.length || !telefono.length;\r\n\r\n        // return true o false\r\n        return valido;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Editar Cliente</h2>\r\n            \r\n            <form\r\n                onSubmit={actualizarCliente}\r\n            >\r\n                <legend>Llena todos los campos</legend>\r\n                <div className=\"campo\">\r\n                    <label>Numero Cedula:</label>\r\n                    <input type=\"number\" \r\n                           placeholder=\"Numero Cedula\" \r\n                           name=\"numero_cedula\"\r\n                           onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Nombre:</label>\r\n                    <input type=\"text\" \r\n                           placeholder=\"Nombre Cliente\" \r\n                           name=\"nombre\" \r\n                           onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Apellido:</label>\r\n                    <input type=\"text\" \r\n                           placeholder=\"Apellido Cliente\" \r\n                           name=\"apellido\"\r\n                           onChange={actualizarState}\r\n                     />\r\n                </div>\r\n            \r\n                <div className=\"campo\">\r\n                    <label>Tipo Ser:</label>\r\n                    <select name=\"tipo_ser\" onChange={actualizarState}>\r\n                       <option value=\"Humano\">Seleccione Uno</option> \r\n                        <option value=\"Humano\">Humano</option> \r\n                        <option value=\"Dios\" >DIos</option>\r\n                    </select>\r\n                   {/*  <input type=\"text\"\r\n                           placeholder=\"Tipo Ser\" \r\n                           name=\"tipo_ser\" \r\n                           onChange={actualizarState}\r\n                    /> */}\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Fecha Nacimiento:</label>\r\n                    <input type=\"date\" \r\n                           placeholder=\"Fecha Nacimiento\" \r\n                           name=\"fecha_nacimiento\"\r\n                           onChange={actualizarState}\r\n                     />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" \r\n                           placeholder=\"Email Cliente\" \r\n                           name=\"email\" \r\n                           onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Teléfono:</label>\r\n                    <input type=\"number\" \r\n                           placeholder=\"Teléfono Cliente\" \r\n                           name=\"telefono\" \r\n                           onChange={actualizarState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"enviar\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-azul\" \r\n                        value=\"Guardar Cambios\" \r\n                        disabled={ validarCliente() }\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n// HOC, es una función que toma un componente y retorna un nuevo componente\r\nexport default  withRouter(EditarCliente);"]},"metadata":{},"sourceType":"module"}