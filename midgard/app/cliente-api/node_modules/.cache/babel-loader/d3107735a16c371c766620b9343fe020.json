{"ast":null,"code":"import _objectSpread from \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, useContext } from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport clienteAxios from '../../config/axios'; // Context\n\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Login(props) {\n  // Auth y token\n  const _useContext = useContext(CRMContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        auth = _useContext2[0],\n        guardarAuth = _useContext2[1]; // State con los datos del formulario\n\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        credenciales = _useState2[0],\n        guardarCredenciales = _useState2[1]; // iniciar sesión en el servidor\n\n\n  const iniciarSesion = async e => {\n    e.preventDefault(); // autenticar al usuario\n\n    try {\n      const respuesta = await clienteAxios.post('/iniciar-sesion', credenciales); // extraer el token y colocarlo en localstorage\n\n      const token = respuesta.data.token;\n      localStorage.setItem('token', token); // colocarlo en el state\n\n      guardarAuth({\n        token,\n        auth: true\n      }); // alerta\n\n      Swal.fire('Login Correcto', 'Has iniciado Sesión', 'success'); // redireccionar\n\n      props.history.push('/');\n    } catch (error) {\n      console.log(error);\n      Swal.fire({\n        type: 'error',\n        title: 'Hubo un error',\n        text: error.response.data.mensaje\n      });\n    }\n  }; // almacenar lo que el usuario escribe en el state\n\n\n  const leerDatos = e => {\n    guardarCredenciales(_objectSpread({}, credenciales, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Iniciar Sesi\\xF3n\"), React.createElement(\"div\", {\n    className: \"contenedor-formulario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: iniciarSesion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email para Iniciar Sesi\\xF3n\",\n    required: true,\n    onChange: leerDatos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password para Iniciar Sesi\\xF3n\",\n    required: true,\n    onChange: leerDatos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Iniciar Sesi\\xF3n\",\n    className: \"btn btn-verde btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["E:\\Academicos\\Udemy\\Node.js -Bootcamp\\cliente-api\\src\\components\\auth\\Login.js"],"names":["React","useState","useContext","Swal","withRouter","clienteAxios","CRMContext","Login","props","auth","guardarAuth","credenciales","guardarCredenciales","iniciarSesion","e","preventDefault","respuesta","post","token","data","localStorage","setItem","fire","history","push","error","console","log","type","title","text","response","mensaje","leerDatos","target","name","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\n\n// Context\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Login(props){\n\n    // Auth y token\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n\n    // State con los datos del formulario\n    const [ credenciales, guardarCredenciales] = useState({});\n\n\n    // iniciar sesión en el servidor\n    const iniciarSesion = async e => {\n        e.preventDefault();\n\n        // autenticar al usuario\n\n        try {\n            const respuesta = await clienteAxios.post('/iniciar-sesion', credenciales);\n            \n            // extraer el token y colocarlo en localstorage\n            const { token } = respuesta.data;\n            localStorage.setItem('token', token);\n\n            // colocarlo en el state\n            guardarAuth({\n                token, \n                auth: true\n            })\n\n            // alerta\n            Swal.fire(\n                'Login Correcto',\n                'Has iniciado Sesión',\n                'success'\n            )\n\n            // redireccionar\n            props.history.push('/');\n\n            \n        } catch (error) {\n            console.log(error);\n            Swal.fire({\n                type: 'error',\n                title: 'Hubo un error',\n                text: error.response.data.mensaje\n            })\n        }\n    }\n\n    // almacenar lo que el usuario escribe en el state\n    const leerDatos = e => {\n        guardarCredenciales({\n            ...credenciales,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    return(\n\n        <div className=\"login\">\n            <h2>Iniciar Sesión</h2>\n\n            <div className=\"contenedor-formulario\">\n                <form\n                    onSubmit={iniciarSesion}\n                >\n\n                    <div className=\"campo\">\n                        <label>Email</label>\n                        <input \n                            type=\"text\"\n                            name=\"email\"\n                            placeholder=\"Email para Iniciar Sesión\"\n                            required\n                            onChange={leerDatos}\n                        />\n                    </div>\n\n                    <div className=\"campo\">\n                        <label>Password</label>\n                        <input \n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password para Iniciar Sesión\"\n                            required\n                            onChange={leerDatos}\n                        />\n                    </div>\n\n                    <input type=\"submit\" value=\"Iniciar Sesión\" className=\"btn btn-verde btn-block\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}