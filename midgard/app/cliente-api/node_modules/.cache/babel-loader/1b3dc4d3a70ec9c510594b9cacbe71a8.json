{"ast":null,"code":"import _slicedToArray from \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Academicos\\\\Udemy\\\\Node.js -Bootcamp\\\\cliente-api\\\\src\\\\components\\\\clientes\\\\Clientes.js\";\nimport React, { useEffect, useState, Fragment } from 'react'; //importar cliente axios\n\nimport clienteaAxios from '../../config/axios';\nimport Cliente from './CLiente';\nimport { Link } from 'react-router-dom';\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Clientes() {\n  //trabajar con el state\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientes = _useState2[0],\n        guardarCLientes = _useState2[1]; //utilizar valor context\n\n\n  const _useContext = useContext(CRMContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        auth = _useContext2[0],\n        guardarAuth = _useContext2[1]; //query a la api\n\n\n  const consultarApi = async () => {\n    const clientesConsulta = await clienteaAxios.get('/clientes'); //coloca el resultado en el stae\n\n    guardarCLientes(clientesConsulta.data); //console.log(clientesConsulta)\n  };\n  /* //use effect es similar a componentdidmount y willmount\r\n  useEffect( ()=>{\r\n      consultarApi();\r\n  },[clientes]); */\n  // use effect es similar a componentdidmount y willmount\n\n\n  useEffect(() => {\n    if (auth.token !== '') {\n      // Query a la API\n      const consultarAPI = async () => {\n        try {\n          const clientesConsulta = await clienteAxios.get('/clientes', {\n            headers: {\n              Authorization: \"Bearer \".concat(auth.token)\n            }\n          }); // colocar el resultado en el state\n\n          guardarClientes(clientesConsulta.data);\n        } catch (error) {\n          // Error con authorizacion\n          if (error.response.status = 500) {\n            props.history.push('/iniciar-sesion');\n          }\n        }\n      };\n\n      consultarAPI();\n    } else {\n      props.history.push('/iniciar-sesion');\n    }\n  }, [clientes]); // Si el state esta como false\n\n  if (!auth.auth) {\n    props.history.push('/iniciar-sesion');\n  }\n\n  if (!clientes.length) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Clientes\"), React.createElement(Link, {\n    to: \"/clientes/nuevo\",\n    class: \"btn btn-verde nvo-cliente\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"Nuevo Cliente\"), React.createElement(\"ul\", {\n    class: \"listado-clientes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, clientes.map(cliente => React.createElement(Cliente, {\n    key: cliente._id,\n    cliente: cliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n}\n\nexport default withRouter(Clientes);","map":{"version":3,"sources":["E:\\Academicos\\Udemy\\Node.js -Bootcamp\\cliente-api\\src\\components\\clientes\\Clientes.js"],"names":["React","useEffect","useState","Fragment","clienteaAxios","Cliente","Link","CRMContext","Clientes","clientes","guardarCLientes","useContext","auth","guardarAuth","consultarApi","clientesConsulta","get","data","token","consultarAPI","clienteAxios","headers","Authorization","guardarClientes","error","response","status","props","history","push","length","map","cliente","_id","withRouter"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,EAAkCC,QAAlC,QAAiD,OAAjD,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,QAAT,GAAmB;AACf;AADe,oBAEmBN,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAEPO,QAFO;AAAA,QAEEC,eAFF,kBAGf;;;AAHe,sBAIcC,UAAU,CAAEJ,UAAF,CAJxB;AAAA;AAAA,QAIRK,IAJQ;AAAA,QAIFC,WAJE,oBAKf;;;AACA,QAAMC,YAAY,GAAC,YAAU;AACzB,UAAMC,gBAAgB,GAAC,MAAMX,aAAa,CAACY,GAAd,CAAkB,WAAlB,CAA7B,CADyB,CAEzB;;AACAN,IAAAA,eAAe,CAACK,gBAAgB,CAACE,IAAlB,CAAf,CAHyB,CAIzB;AAEH,GAND;AAOA;;;;AAKA;;;AACAhB,EAAAA,SAAS,CAAE,MAAM;AAEb,QAAGW,IAAI,CAACM,KAAL,KAAe,EAAlB,EAAsB;AAClB;AACA,YAAMC,YAAY,GAAG,YAAY;AAC7B,YAAI;AACA,gBAAMJ,gBAAgB,GAAG,MAAMK,YAAY,CAACJ,GAAb,CAAiB,WAAjB,EAA8B;AACzDK,YAAAA,OAAO,EAAE;AACLC,cAAAA,aAAa,mBAAaV,IAAI,CAACM,KAAlB;AADR;AADgD,WAA9B,CAA/B,CADA,CAOA;;AACAK,UAAAA,eAAe,CAACR,gBAAgB,CAACE,IAAlB,CAAf;AAEH,SAVD,CAUE,OAAOO,KAAP,EAAc;AACZ;AACA,cAAGA,KAAK,CAACC,QAAN,CAAeC,MAAf,GAAwB,GAA3B,EAAgC;AAC5BC,YAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACH;AACJ;AACJ,OAjBD;;AAkBAV,MAAAA,YAAY;AACf,KArBD,MAqBO;AACHQ,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACH;AACJ,GA1BQ,EA0BN,CAACpB,QAAD,CA1BM,CAAT,CAnBe,CA+Cf;;AACA,MAAG,CAACG,IAAI,CAACA,IAAT,EAAe;AACXe,IAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACH;;AAED,MAAG,CAACpB,QAAQ,CAACqB,MAAb,EAAqB,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAErB,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,iBAAV;AAA6B,IAAA,KAAK,EAAC,2BAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,kBAHJ,EAQI;AAAI,IAAA,KAAK,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,QAAQ,CAACsB,GAAT,CAAaC,OAAO,IAClB,oBAAC,OAAD;AACK,IAAA,GAAG,EAAEA,OAAO,CAACC,GADlB;AAEK,IAAA,OAAO,EAAED,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADL,CARJ,CADJ;AAoBH;;AAED,eAAeE,UAAU,CAAC1B,QAAD,CAAzB","sourcesContent":["import React, {useEffect,useState,Fragment} from 'react';\r\n\r\n//importar cliente axios\r\nimport clienteaAxios from '../../config/axios';\r\n\r\nimport Cliente from './CLiente';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { CRMContext } from '../../context/CRMContext';\r\n\r\nfunction Clientes(){\r\n    //trabajar con el state\r\n    const [ clientes,guardarCLientes]=useState([]);\r\n    //utilizar valor context\r\n    const [auth, guardarAuth ] = useContext(Â CRMContext );\r\n    //query a la api\r\n    const consultarApi=async ()=>{\r\n        const clientesConsulta=await clienteaAxios.get('/clientes');\r\n        //coloca el resultado en el stae\r\n        guardarCLientes(clientesConsulta.data);\r\n        //console.log(clientesConsulta)\r\n\r\n    }\r\n    /* //use effect es similar a componentdidmount y willmount\r\n    useEffect( ()=>{\r\n        consultarApi();\r\n    },[clientes]); */\r\n\r\n    // use effect es similar a componentdidmount y willmount\r\n    useEffect( () => {\r\n\r\n        if(auth.token !== '') {\r\n            // Query a la API\r\n            const consultarAPI = async () => {\r\n                try {\r\n                    const clientesConsulta = await clienteAxios.get('/clientes', {\r\n                        headers: {\r\n                            Authorization : `Bearer ${auth.token}`\r\n                        }\r\n                    });\r\n    \r\n                    // colocar el resultado en el state\r\n                    guardarClientes(clientesConsulta.data);\r\n\r\n                } catch (error) {\r\n                    // Error con authorizacion\r\n                    if(error.response.status = 500) {\r\n                        props.history.push('/iniciar-sesion');\r\n                    }\r\n                }\r\n            }\r\n            consultarAPI();\r\n        } else {\r\n            props.history.push('/iniciar-sesion');\r\n        }\r\n    }, [clientes] );\r\n\r\n    // Si el state esta como false\r\n    if(!auth.auth) {\r\n        props.history.push('/iniciar-sesion');\r\n    }\r\n\r\n    if(!clientes.length) return <Spinner /> \r\n\r\n    return(\r\n        <Fragment>\r\n            <h2>Clientes</h2>\r\n\r\n            <Link to={\"/clientes/nuevo\"} class=\"btn btn-verde nvo-cliente\"> \r\n                <i class=\"fas fa-plus-circle\"></i>\r\n                Nuevo Cliente\r\n            </Link>\r\n\r\n            <ul class=\"listado-clientes\">\r\n                {clientes.map(cliente=>(\r\n                   <Cliente \r\n                        key={cliente._id}\r\n                        cliente={cliente}\r\n                   />\r\n                ))}\r\n            </ul>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default withRouter(Clientes);"]},"metadata":{},"sourceType":"module"}